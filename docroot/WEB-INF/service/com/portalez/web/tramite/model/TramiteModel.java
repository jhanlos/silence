/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package com.portalez.web.tramite.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.model.WorkflowedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Tramite service. Represents a row in the &quot;slnc_Tramite&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.portalez.web.tramite.model.impl.TramiteModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.portalez.web.tramite.model.impl.TramiteImpl}.
 * </p>
 *
 * @author Jorge Loayza-Soloisolo
 * @see Tramite
 * @see com.portalez.web.tramite.model.impl.TramiteImpl
 * @see com.portalez.web.tramite.model.impl.TramiteModelImpl
 * @generated
 */
public interface TramiteModel extends BaseModel<Tramite>, GroupedModel,
	WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a tramite model instance should use the {@link Tramite} interface instead.
	 */

	/**
	 * Returns the primary key of this tramite.
	 *
	 * @return the primary key of this tramite
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this tramite.
	 *
	 * @param primaryKey the primary key of this tramite
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the tramite ID of this tramite.
	 *
	 * @return the tramite ID of this tramite
	 */
	public long getTramiteId();

	/**
	 * Sets the tramite ID of this tramite.
	 *
	 * @param tramiteId the tramite ID of this tramite
	 */
	public void setTramiteId(long tramiteId);

	/**
	 * Returns the group ID of this tramite.
	 *
	 * @return the group ID of this tramite
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this tramite.
	 *
	 * @param groupId the group ID of this tramite
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this tramite.
	 *
	 * @return the company ID of this tramite
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this tramite.
	 *
	 * @param companyId the company ID of this tramite
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this tramite.
	 *
	 * @return the user ID of this tramite
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this tramite.
	 *
	 * @param userId the user ID of this tramite
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this tramite.
	 *
	 * @return the user uuid of this tramite
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this tramite.
	 *
	 * @param userUuid the user uuid of this tramite
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this tramite.
	 *
	 * @return the user name of this tramite
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this tramite.
	 *
	 * @param userName the user name of this tramite
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this tramite.
	 *
	 * @return the create date of this tramite
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this tramite.
	 *
	 * @param createDate the create date of this tramite
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this tramite.
	 *
	 * @return the modified date of this tramite
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this tramite.
	 *
	 * @param modifiedDate the modified date of this tramite
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the nombre of this tramite.
	 *
	 * @return the nombre of this tramite
	 */
	@AutoEscape
	public String getNombre();

	/**
	 * Sets the nombre of this tramite.
	 *
	 * @param nombre the nombre of this tramite
	 */
	public void setNombre(String nombre);

	/**
	 * Returns the apellido of this tramite.
	 *
	 * @return the apellido of this tramite
	 */
	@AutoEscape
	public String getApellido();

	/**
	 * Sets the apellido of this tramite.
	 *
	 * @param apellido the apellido of this tramite
	 */
	public void setApellido(String apellido);

	/**
	 * Returns the status of this tramite.
	 *
	 * @return the status of this tramite
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this tramite.
	 *
	 * @param status the status of this tramite
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this tramite.
	 *
	 * @return the status by user ID of this tramite
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this tramite.
	 *
	 * @param statusByUserId the status by user ID of this tramite
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this tramite.
	 *
	 * @return the status by user uuid of this tramite
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this tramite.
	 *
	 * @param statusByUserUuid the status by user uuid of this tramite
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this tramite.
	 *
	 * @return the status by user name of this tramite
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this tramite.
	 *
	 * @param statusByUserName the status by user name of this tramite
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this tramite.
	 *
	 * @return the status date of this tramite
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this tramite.
	 *
	 * @param statusDate the status date of this tramite
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved()}
	 */
	@Override
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this tramite is approved.
	 *
	 * @return <code>true</code> if this tramite is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this tramite is denied.
	 *
	 * @return <code>true</code> if this tramite is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this tramite is a draft.
	 *
	 * @return <code>true</code> if this tramite is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this tramite is expired.
	 *
	 * @return <code>true</code> if this tramite is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this tramite is inactive.
	 *
	 * @return <code>true</code> if this tramite is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this tramite is incomplete.
	 *
	 * @return <code>true</code> if this tramite is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this tramite is pending.
	 *
	 * @return <code>true</code> if this tramite is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this tramite is scheduled.
	 *
	 * @return <code>true</code> if this tramite is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(com.portalez.web.tramite.model.Tramite tramite);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.portalez.web.tramite.model.Tramite> toCacheModel();

	@Override
	public com.portalez.web.tramite.model.Tramite toEscapedModel();

	@Override
	public com.portalez.web.tramite.model.Tramite toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}